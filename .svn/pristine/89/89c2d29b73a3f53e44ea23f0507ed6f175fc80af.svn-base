package gapp.web.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import gapp.model.GappApplication;
import gapp.model.GappApplicationStatus;
import gapp.model.GappDepartment;
import gapp.model.GappFile;
import gapp.model.GappProgram;
import gapp.model.GappUniversityDegree;
import gapp.model.GappUsers;
import gapp.model.dao.GappApplicationDao;
import gapp.model.dao.GappDepartmentDao;
import gapp.model.dao.GappUserDao;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.multipart.MultipartFile;




@Controller
@SessionAttributes("gappApplication")
public class GappApplicationComtrollerForEdit {
	
	@Autowired
	GappApplicationDao gappApplicationDao;

	@Autowired
	private ServletContext context;
	
	@Autowired
	GappDepartmentDao gappDepartmentDao; 
	
	@Autowired
	GappUserDao gappUserDao;
	
	private java.io.File getFileDirectory() {
		String path = context.getRealPath("/WEB-INF/files");

		return new java.io.File(path);
	}
	
	
	
	@RequestMapping(value = "/editApplication.html", method = RequestMethod.GET)
	public String editApp(@RequestParam int appID, ModelMap model){
		
		GappApplication gappApplication=gappApplicationDao.getApplicationByID(appID);
		//int studID=gappApplication.getUser().getId();
		GappDepartment gappDepartment=gappApplication.getProgram().getDepartment();
		List<GappProgram> gappProgramsList=gappDepartment.getProgramList();
		
		GappUsers gappUsers=gappApplication.getUser();
		System.out.println("appid is get"+gappApplication.getId());
		model.put("gappUsers", gappUsers);			
		model.put("progList",gappProgramsList );
		model.put("gappApplication", gappApplication);
		
		return "editApplication";
		
	}
	
	@RequestMapping(value = "/editApplication.html", method = RequestMethod.POST)
	public String editApp( @ModelAttribute GappApplication gappApplication,HttpServletRequest request,  BindingResult result, @RequestParam int appID, ModelMap model,@RequestParam MultipartFile t)throws IllegalStateException, IOException{
		System.out.println("indise edit Post");
		
		
		//System.out.println("file uploaded:"+t.getOriginalFilename());
		
		System.out.println(gappApplication.getTerm());
		String prog=request.getParameter("prog");
	
		System.out.println("application is post "+gappApplication.getId());
		int prog_int=Integer.parseInt(prog);
		System.out.println("new prog:"+prog_int);
		GappProgram gappProgram=gappDepartmentDao.getProgramById(prog_int);
	
		gappApplication.setProgram(gappProgram);
	
		int stuid=Integer.parseInt(request.getParameter("studId"));
		GappUsers gappUsers=gappUserDao.getUserById(stuid);
		

    	//-------------- Set Applicatiom Status ----------------------//
    	
    	GappApplicationStatus applicationStatus=new GappApplicationStatus();
    	String save=request.getParameter("save");
    	String submit=request.getParameter("submit");

    	System.out.println("Action:"+save);
    	System.out.println("Action:"+submit);
    	
    	if(submit!=null)
    	{	   
    		applicationStatus.setStatus("New");
        	applicationStatus.setComment("the application is submitted by the student");

    	}
    	else
    	{
    		applicationStatus.setStatus("Not Submitted");	
        	applicationStatus.setComment("Changes saved");

    	}
    	
    	applicationStatus.setTimeOfChange(new Date());
    	applicationStatus.setIsLatestStatus(true);
    	applicationStatus.setGappUsers(gappUsers);
    	applicationStatus.setGappApplication(gappApplication);
    	
    	List<GappApplicationStatus> listOfStatus=gappApplication.getApplicationStatus();
    	
    	for(GappApplicationStatus gappApplicationStatus:listOfStatus){
    		gappApplicationStatus.setIsLatestStatus(false);
    	}
    	
    	listOfStatus.add(applicationStatus);
    	gappApplication.setApplicationStatus(listOfStatus);
    	
    	//------------Set file and Transacript File Handling --------------------//
		
		//Combination of User ID + Program + Term -- todo
		String Filename="Transcript_"+gappUsers.getId()+"_"+t.getOriginalFilename();
		System.out.println("Filename:"+Filename);
		try{
		t.transferTo(new java.io.File(getFileDirectory(),Filename));
		}
		catch(Exception e){
			System.out.println("Exception in Edit App - while uploding the transcrit"+e);
		}
		System.out.println(getFileDirectory()+Filename);
		Date date = new Date();
    	GappFile file = new GappFile();
    	if(!t.isEmpty()){
    		file.setDate(date);
    		file.setName(Filename);
    		file.setSize(t.getSize());
    		file.setType(t.getContentType());
    		//file.setOwner(user.getUser(userid));
    		file.setOriginalName(t.getOriginalFilename());

    		gappApplication.setTranscript(gappApplicationDao.saveFile(file));
    	}

		gappApplication = gappApplicationDao.addApplication(gappApplication);
		
		return "redirect:student.html?id="+stuid;
		
	}
	
	
	//deleteUniDegree
	@RequestMapping(value = "/deleteUniDegree.html", method = RequestMethod.GET)
	public String deleteUniDegree(@RequestParam int appId,@RequestParam int degreeId, ModelMap model){
		
		GappUniversityDegree gappUniversityDegree= gappApplicationDao.getUniDegree(degreeId);
		
		gappApplicationDao.removeUniDegree(gappUniversityDegree);
		
		return "redirect:editApplication.html?appID="+appId;
		
	}
	
	

}
